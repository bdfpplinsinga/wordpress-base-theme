# ====================================
# Config: Buro voor de Boeg
# Author: Justin Streuper
# Version: 1.0.1
# ====================================
#  CirclCi Config which is used for linting, testing and deploying the application
#  1. In CircleCi you'll need to follow the project and start building it (when not active)
#
#  2. Next you'll need to add the SSH key for the server which the application will run on, you'll
#     find this under the SSH Permission tab
#
#  3. Then you need to add the following variables:
#    - STAGING_PATH = The full path for the staging env, starting after /domains/
#    - PRODUCTION_PATH = The full path for the production env, starting after /domains/
#    - USER = The username on the server
#    - SERVER_IP = The IP address for the server (or user if allocated)
#
#  4. Always lint before push!
# ====================================

references:
  defaults: &defaults
    working_directory: ~/theme
    docker:
      - image: circleci/php:7.3-stretch-node-browsers
    
  npm_permissions: &npm_permissions
    run:
      name: Set user permissions
      command: sudo chown -R $(whoami):$(whoami) ~/theme

  npm_restore_cache: &npm_restore_cache
    run:
      name: Restore Node Modules Cache
      restore_cache:
        keys:
          - node-v4-{{ checksum "package.json" }}
          - node-v4-
  
  npm_save_cache: &npm_save_cache
    run:
      name: Save Node Modules Cache
      save_cache:
        key: node-v4-{{ checksum "package.json" }}
        paths:
          - node_modules

  npm_install: &npm_install
    run:
      name: Install NPM packages
      command: npm install --silent
  
  gulp_build_staging: &gulp_build_staging
    run:
      name: Gulp build staging
      command: npx gulp build
  
  gulp_build_production: &gulp_build_production
    run:
      name: Gulp build production
      command: npx gulp buildProd
  
  composer_restore_cache: &composer_restore_cache
    run:
      name: Restore composer cache
      restore_cache:
        keys:
          # "composer.json" can be used if "composer.json" is not committed to the repository.
          - v1-dependencies-{{ checksum "composer.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
  
  composer_save_cache: &composer_save_cache
    run:
      name: Save composer cache
      save_cache:
        key: composer-v1-{{ checksum "composer.lock" }}
        paths:
          - vendor

  composer_install: &composer_install
    run:
      name: Compile vendors from composer packages
      command: composer install -n --ignore-platform-reqs --optimize-autoloader
  
  append_sshkey: &append_sshkey
    add_ssh_keys:
      fingerprints:
        - "$SSH_FINGERPRINT"
  
  add_serverkeys: &add_serverkeys
    run:
      name: Add server keys
      command: ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
  
  deploy_staging: &deploy_staging
    run:
      name: Rsync deploy to staging
      command:  rsync -avzp --chown=$USER:$USER --delete --exclude-from '.rsyncignore' . root@$SERVER_IP:/home/$USER/domains/$STAGING_PATH

  deploy_production: &deploy_production
    run:
      name: Rsync deploy to production
      command: rsync -avzp --chown=$USER:$USER --delete --exclude-from '.rsyncignore' . root@$SERVER_IP:/home/$USER/domains/$PRODUCTION_PATH

version: 2.1
jobs:
  jslint:
    <<: *defaults
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_install
      - run: npx gulp jsLint

  sasslint:
    <<: *defaults
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_install
      - run: npx gulp sassLint

  staging:
    <<: *defaults
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - << : *gulp_build_staging
      - << : *composer_restore_cache
      - << : *composer_install
      - << : *composer_save_cache
      - << : *append_sshkey
      - << : *add_serverkeys
      - << : *deploy_staging

  production:
    <<: *defaults
    steps:
      - checkout
      - << : *npm_permissions
      - << : *npm_restore_cache
      - << : *npm_install
      - << : *npm_save_cache
      - << : *gulp_build_production
      - << : *composer_restore_cache
      - << : *composer_install
      - << : *composer_save_cache
      - << : *append_sshkey
      - << : *add_serverkeys
      - << : *deploy_production

workflows: 
  version: 2
  deploy:
    jobs:
      - jslint:
          filters: &filter_all
            tags:
              only: /.*?/

      - sasslint:
          filters: *filter_all

      - staging:
          requires:
            - jslint
            - sasslint
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                # v1.0.0-1 / v1.0.0-pre1 / v1.0.0
                - /^v\d+\.\d+\.\d+(\-.+)?$/
      
      - approve_deploy:
          type: approval
          requires:
            - staging
          filters: &filter_production
            branches:
              ignore: /.*/
            tags:
              only:
                # v1.0.0
                - /^v\d+\.\d+\.\d+$/
      
      - production: 
          requires: 
            - staging
            - approve_deploy
          filters: *filter_production